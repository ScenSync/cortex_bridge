[workspace]
members = [
    "easytier_common",
    "easytier_device_client",
    "easytier_config_server",
    "easytier_network_gateway",
    "rerun_bridge",
]
resolver = "2"

[workspace.dependencies]
# EasyTier integration - 核心依赖 (使用 GitHub 依赖)
easytier = { git = "https://github.com/EasyTier/EasyTier", tag = "v2.4.2" }

# Core async runtime
tokio = { version = "1.0", features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Utilities
uuid = { version = "1.0", features = ["v4"] }
once_cell = "1.19"
dashmap = "5.5"
url = "2.5"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "time", "local-time"] }
tracing-appender = "0.2"
chrono = { version = "0.4", features = ["serde"] }
anyhow = "1.0"
thiserror = "1.0"
gethostname = "0.4.3"

# Server-specific dependencies
maxminddb = "0.24"
urlencoding = "2.1"

# Database dependencies
sea-orm = { version = "1.1", features = ["sqlx-mysql", "runtime-tokio-rustls", "macros"] }
sea-orm-migration = "1.1"

# FFI dependencies
libc = "0.2"

[workspace.package]
version = "0.2.0"
edition = "2021"
authors = ["Cortex Team"]
license = "MIT"

# ============================================================================
# 编译优化配置 - 针对构建速度和二进制大小优化
# ============================================================================

[profile.dev]
opt-level = 1              # 基本优化，加快增量构建
incremental = true         # 启用增量编译
codegen-units = 256        # 最大并行度，加快首次编译
debug = 1                  # 减少调试信息大小，加快链接速度
split-debuginfo = "unpacked" # 分离调试信息，加快链接（仅 Linux/macOS）

# 为 dev 模式下的依赖开启优化，提升运行速度但不影响项目代码编译速度
[profile.dev.package."*"]
opt-level = 2
debug = 0

# 为特定大型依赖开启更多优化
[profile.dev.package.rerun]
opt-level = 2
[profile.dev.package.easytier]
opt-level = 2
[profile.dev.package.tokio]
opt-level = 2
[profile.dev.package.sea-orm]
opt-level = 2

[profile.release]
opt-level = 3              # 最大优化
lto = "thin"               # 使用 thin LTO（比 full LTO 快很多，牺牲少量优化）
codegen-units = 1          # 单个 codegen unit 获得最佳优化
panic = "abort"            # 减少二进制大小
strip = true               # 自动 strip 符号
debug = false              # 不包含调试信息

# Release with debug info（用于性能分析）
[profile.release-with-debug]
inherits = "release"
strip = false
debug = true

# 针对 CI/快速构建的 release 配置
[profile.release-fast]
inherits = "release"
lto = false                # 禁用 LTO 大幅加快构建
codegen-units = 16         # 并行编译
opt-level = 2              # 略微降低优化等级

# 针对测试的优化配置
[profile.test]
opt-level = 1
incremental = true
codegen-units = 256
debug = 1

# 为测试依赖开启优化
[profile.test.package."*"]
opt-level = 2
debug = 0
