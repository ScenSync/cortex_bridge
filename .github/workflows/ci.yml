name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test-ubuntu:
    name: Test Suite (Ubuntu with MySQL)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root123
          MYSQL_DATABASE: easytier_bridge_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ubuntu-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ubuntu-cargo-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config libssl-dev protobuf-compiler
        cargo install cbindgen --force

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build project first
      run: cargo build --verbose --all-features

    - name: Generate C headers
      run: |
        mkdir -p include
        cbindgen --config cbindgen.toml --crate easytier-bridge --output include/easytier_bridge.h

    - name: Verify C headers
      run: |
        if [ ! -f include/easytier_bridge.h ]; then
          echo "Error: C header file not generated"
          exit 1
        fi
        echo "C header file size: $(wc -c < include/easytier_bridge.h) bytes"

    - name: Run tests with database
      run: cargo test --verbose --all-features
      env:
        DATABASE_URL: mysql://root:root123@127.0.0.1:3306/easytier_bridge_test

    - name: Run core functionality tests
      run: cargo test --verbose --lib


  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Install cargo-audit
      run: cargo install cargo-audit
    - name: Run security audit
      run: cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root123
          MYSQL_DATABASE: easytier_bridge_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config libssl-dev protobuf-compiler

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov

    - name: Generate code coverage
      env:
        DATABASE_URL: mysql://root:root123@127.0.0.1:3306/easytier_bridge_test
      run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: lcov.info
        fail_ci_if_error: true